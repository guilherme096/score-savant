package Player;
import (
    "guilherme096/score-savant/templates/Layout"
    PlayerObj "guilherme096/score-savant/models"
    "fmt"
	utils "guilherme096/score-savant/utils"
    
)

templ Player(Player PlayerObj.Player) {
    @Layout.Base(){
        <div class="w-full max-h-full m-16 flex flex-row">
            <div class="w-1/4">
                @PlayerBio(*Player.PlayerBio)
                <div class="mt-6">
                    @PlayerContract(*Player.Contract)
                </div>
            </div>
            <div class="ml-5 mr-2 max-h-full">
                <div class="w-52 h-full bg-primary-darker rounded-xl p-4">
                    <div class="text-lg font-bold">
                        Technical
                    </div>
                    <div class="mt-4 flex flex-col">
                        for _, attribute := range Player.TechnicalAttributes {
                            @Attribute(attribute.Name, fmt.Sprintf("%d", attribute.Value), utils.AttributeColor(fmt.Sprintf("%d", attribute.Value)))
                        }
                    </div>
                </div>
            </div>
            <div class="mx-2 max-h-full">
                <div class="w-52 h-full bg-primary-darker rounded-xl p-4">
                    <div class="text-lg font-bold">
                        Mental
                    </div>
                    <div class="mt-4 flex flex-col">
                        for _, attribute := range Player.MentalAttributes {
                            @Attribute(attribute.Name, fmt.Sprintf("%d", attribute.Value), utils.AttributeColor(fmt.Sprintf("%d", attribute.Value)))
                        }
                    </div>
                </div>
            </div>
            <div class="mr-10 ml-2 max-h-full">
                <div class="w-52 h-full bg-primary-darker rounded-xl p-4">
                        <div class="text-lg font-bold">
                            Physical
                        </div>
                        <div class="mt-4 flex flex-col">
                        for _, attribute := range Player.PhysicalAttributes {
                            @Attribute(attribute.Name, fmt.Sprintf("%d", attribute.Value), utils.AttributeColor(fmt.Sprintf("%d", attribute.Value)))
                        }
                        </div>
                </div>
            </div>
        </div>
    }
}
